{
    // This is the path to the binary for cmake-format. If it is in your path,
    // it should just work out-of-the-box. Otherwise, you can set the full path,
    // which will look like this: 
    //    "binary": "/path/to/cmake-format"
    // Note that you can set this from within ST directly through the Command
    // Palette. 

    "binary": "cmake-format",

    // Setting this to true will run the formatter on every save. If you want to
    // only enable this for a given project, try checking out the package
    // "Project-Specific".
    
    "format_on_save": false,

    // The below custom setup will be used if this is set to "custom"
    // If it's set to "file" then it will attempt to automatically detected
    // configuration files may have any name that matches
    // \.?cmake-format(.yaml|.json|.py)

    "style": "custom",

    // How wide to allow formatted cmake files

    "line_width": 80,

    // How many spaces to tab for indent
    "tab_size": 2,

    // If arglists are longer than this, break them always
    "max_subargs_per_line": 3,

    // If true, separate flow control names from their parentheses with a space
    "separate_ctrl_name_with_space": false,

    // If true, separate function names from parentheses with a space
    "separate_fn_name_with_space": false,

    // If a statement is wrapped to more than one line, than dangle the closing
    // parenthesis on it's own line
    "dangle_parens": false,

    // What character to use for bulleted lists
    "bullet_char": "*",

    // What character to use as punctuation after numerals in an enumerated list
    "enum_char": ".",

    // What style line endings to use in the output.
    "line_ending": "unix",

    // Format command names with this case. Options are "lower", "upper",
    // "unchanged"
    "command_case": "lower"
}
